name: 'GitHub Copilot CLI'
description: 'GitHub Copilot CLI wrapper'
inputs:
  github-token:
    description: 'GitHub Personal Access Token with required permissions'
    required: true
  prompt:
    description: 'Prompt to send to GitHub Copilot'
    required: true
  upload-artifact:
    description: 'Upload artifact after running Copilot'
    required: false
    default: true
  mcp-config:
    description: 'MCP configuration for GitHub Copilot'
    required: false
    default: |
      {
        "mcpServers": { }
      }
runs:
  using: 'composite'
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: '22'
    - run: npm install -g @github/copilot
      shell: bash
    - run: |
        mkdir -p $XDG_CONFIG_HOME/.copilot
        
        ACTIONS_TOOLKIT_MCP='{
          "actions-toolkit-mcp": {
            "command": "npx",
            "args": ["-y", "actions-toolkit-mcp"],
            "tools": ["*"],
            "env": {
              "GITHUB_STEP_SUMMARY": "${{ github.step_summary }}"
            }
          }
        }'
        
        # Merge user-provided MCP config with hardcoded config
        echo '${{ inputs.mcp-config }}' | jq --argjson toolkit "$ACTIONS_TOOLKIT_MCP" \
          '.mcpServers += $toolkit' > $XDG_CONFIG_HOME/.copilot/mcp-config.json
        cat $XDG_CONFIG_HOME/.copilot/mcp-config.json
      env:
        GITHUB_STEP_SUMMARY: ${{ github.step_summary }}
      shell: bash
    - run: |
        cat $XDG_CONFIG_HOME/.copilot/config.json
    - run: copilot -p "$PROMPT" --allow-all-tools --log-level all --log-dir ~/.copilot/logs --save-trajectory-output ~/.copilot/trajectory.md
      id: copilot
      env:
        GH_TOKEN: ${{ inputs.github-token }}
        PROMPT: ${{ inputs.prompt }}
      shell: bash
    - uses: actions/upload-artifact@v4
      if: ${{ inputs.upload-artifact }}
      with:
        name: copilot-logs
        path: |
          ~/.copilot/logs/
          ~/.copilot/trajectory.md
          /home/runner/.config/
    # - uses: mxschmitt/action-tmate@v3
    